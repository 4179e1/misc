#!/bin/bash

usage()
{
cat <<EOF
fsact -- Display cumulateive read and write activity across a file system device

Usage: fsact [<filesystem>]
EOF
}

# Load the required DTrace modules
grep profile /proc/modules >/dev/null 2>&1 || modprobe profile || exit 1
grep sdt /proc/modules >/dev/null 2>&1 || modprobe sdt || exit 1

[ $# -eq 1 ] && FSNAME=$1 || FSNAME="/"
[ ! -e $FSNAME ] && echo "$FSNAME not found" && exit 1

# Determine the mountpoint, major and minor numbers, and file system size
MNTPNT=$(df $FSNAME | gawk '{getline; print $1; exit}')
MAJOR=$(printf "%d\n" 0x$(stat -Lc "%t" $MNTPNT))
MINOR=$(printf "%d\n" 0x$(stat -Lc "%T" $MNTPNT))
FSSIZE=$(stat -fc "%b" $FSNAME) # Block size

# Run the embedded D program
dtrace -qs /dev/stdin <<EOF
io:::done
/args[1]->dev_major == $MAJOR && args[1]->dev_minor == $MINOR/
{
	iodir = args[0]->b_flags & B_READ ? "READ" : "WRITE";
	/* Normalize the block number as an integer in the range 0 to 10 */
	blkno = (args[0]->b_blkno)*10/$FSSIZE;
	@a[iodir] = lquantize(blkno, 0, 10, 1);
}

tick-10s
{
	printf ("%Y\n", walltimestamp);
	/* Display the result of the aggregation */
	printa ("%s\n%@d\n", @a);
	/* To reset the aggregation every tick, uncomment the following line */
	/* clear (@a) */
}

EOF

