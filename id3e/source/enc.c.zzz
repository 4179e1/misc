#include <gtk/gtk.h>
#include <string.h>
#include "enc.h"
#include "wrap.h"

struct _enc
{
	GtkWidget *src;
	GtkWidget *dest;
};

gchar *charset_list[] = 
{
	"UTF-8",
	"GBK",
	NULL,
};

Enc *enc_new (void)
{
	return g_new (Enc, 1);
}

void enc_free (Enc *enc)
{
	g_free (enc);
}

Enc *enc_init (Enc *enc, GtkBuilder *builder)
{
	GtkWidget *src_ph;
	GtkWidget *dest_ph;

	src_ph = GTK_WIDGET (Gtk_builder_get_object (builder, "src_ph"));
	dest_ph = GTK_WIDGET (Gtk_builder_get_object (builder, "dest_ph"));

	enc->src = gtk_combo_box_entry_new_text ();
	gtk_container_add (GTK_CONTAINER (src_ph), enc->src);
	gtk_widget_show (enc->src);

	enc->dest = gtk_combo_box_entry_new_text ();
	gtk_container_add (GTK_CONTAINER (dest_ph), enc->dest);
	gtk_widget_show (enc->dest);

	{
		gchar **ptr;

		for (ptr = charset_list; *ptr != NULL; ptr++)
		{
			gtk_combo_box_append_text (GTK_COMBO_BOX (enc->src), *ptr);
			gtk_combo_box_append_text (GTK_COMBO_BOX (enc->dest), *ptr);
		}

		enc_reset(enc);
		g_message ("%s", enc_get_src (enc));
		g_message ("%s", enc_get_dest (enc));
	}

	return enc;
}

Enc *enc_reset (Enc *enc)
{
	gtk_combo_box_set_active (GTK_COMBO_BOX (enc->src), 0);
	gtk_combo_box_set_active (GTK_COMBO_BOX (enc->dest), -1);
	return enc;
}

gchar *enc_get_src (Enc *enc)
{
	gchar *codeset;
	codeset = gtk_combo_box_get_active_text (GTK_COMBO_BOX (enc->src));
	if (*codeset == '\0')
	{
		return NULL;
	}
	return codeset;
}

gchar *enc_get_dest (Enc *enc)
{
	gchar *codeset;
	codeset = gtk_combo_box_get_active_text (GTK_COMBO_BOX (enc->dest));
	if (*codeset == '\0')
	{
		return NULL;
	}
	return codeset;
}

gchar *enc_set_src (Enc *enc, gchar *codeset)
{
	return codeset;
}

gchar *enc_set_dest (Enc *enc, gchar *codeset)
{
	return codeset;
}
